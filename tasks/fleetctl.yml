---

- name: Ensure /root/.fleet exists
  file:
    dest: /root/.fleet
    state: directory
    owner: root
    mode: '0700'

- name: Check if /root/.fleet/config exists
  stat:
    path: /root/.fleet/config
  register: dotfleet

- block:
    - name: Ensure /root/.fleet/config is setup
      template:
        src: "{{ dotfleetcfg_template | default('fleet-config.j2') }}"
        dest: /root/.fleet/config
        owner: root
        mode: '0600'
  when: not dotfleet.stat.exists
- block:
    - name: Ensure /root/.fleet/config is setup appropriately
      replace:
        dest: /root/.fleet/config
        regexp: "{{ item.re }}"
        replace: "{{ item.rep }}"
        owner: root
        mode: '0600'
      with_items:
        - { re: '^    address: .*', rep: "    address: https://{{ kolide_ip_listen }}:{{ kolide_port }}" }
        - { re: '^    tls-skip-verify: .*', rep: "    tls-skip-verify: {{ kolide_tlsskipverify | default('true') }}" }
        - { re: '^    email: .*', rep: "    email: {{ kolide_admin_email }}" }
  when: dotfleet.stat.exists

- name: Setup admin user and token
  command: >
    fleetctl setup --email {{ kolide_admin_email }} --username {{ kolide_admin_name | default('admin') }} --password '{{ kolide_admin_pass }}' --org-name {{ kolide_orgname }} # noqa 204
  register: fleetsetup
  changed_when: fleetctl.stdout is defined and fleetsetup.stdout == '[+] Fleet setup successful and context configured!'
  failed_when: fleetsetup.rc !=0 and fleetctl.stderr is defined and fleetsetup.stderr != 'Kolide Fleet has already been setup'
  environment:
    PATH: "{{ kolide_bin_prefix }}/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"

- name: Fleetctl login
  command: >
    fleetctl login --email '{{ kolide_admin_email }}' --password '{{ kolide_admin_pass }}'
  changed_when: false
  environment:
    PATH: "{{ kolide_bin_prefix }}/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"

# FIXME! idempotency
- name: Configure fleet packs
  command: "fleetctl apply -f {{ item }}"  # noqa 301
  with_items: "{{ kolide_extra_packs | default([]) }}"
  environment:
    PATH: "{{ kolide_bin_prefix }}/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
